<?php

// Data functions (insert, update, delete, form) for table missions

// This script and data application were generated by AppGini 5.81
// Download AppGini for free from https://bigprof.com/appgini/download/

function missions_insert() {
	global $Translation;

	// mm: can member insert record?
	$arrPerm = getTablePermissions('missions');
	if(!$arrPerm[1]) return false;

	$data = array();
	$data['id_consultant'] = $_REQUEST['id_consultant'];
		if($data['id_consultant'] == empty_lookup_value) { $data['id_consultant'] = ''; }
	$data['rattache_a_filiere'] = $_REQUEST['rattache_a_filiere'];
		if($data['rattache_a_filiere'] == empty_lookup_value) { $data['rattache_a_filiere'] = ''; }
	$data['site_mission'] = $_REQUEST['site_mission'];
		if($data['site_mission'] == empty_lookup_value) { $data['site_mission'] = ''; }
	$data['periode'] = $_REQUEST['periode'];
		if($data['periode'] == empty_lookup_value) { $data['periode'] = ''; }
	$data['date_debut'] = intval($_REQUEST['date_debutYear']) . '-' . intval($_REQUEST['date_debutMonth']) . '-' . intval($_REQUEST['date_debutDay']);
	$data['date_debut'] = parseMySQLDate($data['date_debut'], '');
	$data['date_fin'] = intval($_REQUEST['date_finYear']) . '-' . intval($_REQUEST['date_finMonth']) . '-' . intval($_REQUEST['date_finDay']);
	$data['date_fin'] = parseMySQLDate($data['date_fin'], '');
	$data['description_mission'] = br2nl($_REQUEST['description_mission']);
	$data['description_detaille'] = $_REQUEST['description_detaille'];
		if($data['description_detaille'] == empty_lookup_value) { $data['description_detaille'] = ''; }
	$data['client'] = $_REQUEST['client'];
		if($data['client'] == empty_lookup_value) { $data['client'] = ''; }
	$data['environnement'] = $_REQUEST['environnement'];
		if($data['environnement'] == empty_lookup_value) { $data['environnement'] = ''; }
	$data['competences_utilisees'] = $_REQUEST['competences_utilisees'];
		if($data['competences_utilisees'] == empty_lookup_value) { $data['competences_utilisees'] = ''; }
	if($data['description_mission']== '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'Objet de la mission': " . $Translation['field not null'] . '<br><br>';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}

	// hook: missions_before_insert
	if(function_exists('missions_before_insert')) {
		$args = array();
		if(!missions_before_insert($data, getMemberInfo(), $args)) { return false; }
	}

	$error = '';
	// set empty fields to NULL
	$data = array_map(function($v) { return ($v === '' ? NULL : $v); }, $data);
	insert('missions', backtick_keys_once($data), $error);
	if($error)
		die("{$error}<br><a href=\"#\" onclick=\"history.go(-1);\">{$Translation['< back']}</a>");

	$recID = db_insert_id(db_link());

	// automatic rattache_a_filiere if passed as filterer
	if($_REQUEST['filterer_rattache_a_filiere']) {
		sql("update `missions` set `rattache_a_filiere`='" . makeSafe($_REQUEST['filterer_rattache_a_filiere']) . "' where `id_mission`='" . makeSafe($recID, false) . "'", $eo);
	}

	// hook: missions_after_insert
	if(function_exists('missions_after_insert')) {
		$res = sql("select * from `missions` where `id_mission`='" . makeSafe($recID, false) . "' limit 1", $eo);
		if($row = db_fetch_assoc($res)) {
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args=array();
		if(!missions_after_insert($data, getMemberInfo(), $args)) { return $recID; }
	}

	// mm: save ownership data
	set_record_owner('missions', $recID, getLoggedMemberID());

	// if this record is a copy of another record, copy children if applicable
	if(!empty($_REQUEST['SelectedID'])) missions_copy_children($recID, $_REQUEST['SelectedID']);

	return $recID;
}

function missions_copy_children($destination_id, $source_id) {
	global $Translation;
	$requests = array(); // array of curl handlers for launching insert requests
	$eo = array('silentErrors' => true);
	$uploads_dir = realpath(dirname(__FILE__) . '/../' . $Translation['ImageFolder']);
	$safe_sid = makeSafe($source_id);

	// launch requests, asynchronously
	curl_batch($requests);
}

function missions_delete($selected_id, $AllowDeleteOfParents=false, $skipChecks=false) {
	// insure referential integrity ...
	global $Translation;
	$selected_id=makeSafe($selected_id);

	// mm: can member delete record?
	$arrPerm=getTablePermissions('missions');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='missions' and pkValue='$selected_id'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='missions' and pkValue='$selected_id'");
	if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3) { // allow delete?
		// delete allowed, so continue ...
	}else{
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: missions_before_delete
	if(function_exists('missions_before_delete')) {
		$args=array();
		if(!missions_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'];
	}

	// child table: competences_individuelles
	$res = sql("select `id_mission` from `missions` where `id_mission`='$selected_id'", $eo);
	$id_mission = db_fetch_row($res);
	$rires = sql("select count(1) from `competences_individuelles` where `rattache_a_mission`='".addslashes($id_mission[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "competences_individuelles", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "competences_individuelles", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='missions_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='missions_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	sql("delete from `missions` where `id_mission`='$selected_id'", $eo);

	// hook: missions_after_delete
	if(function_exists('missions_after_delete')) {
		$args=array();
		missions_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("delete from membership_userrecords where tableName='missions' and pkValue='$selected_id'", $eo);
}

function missions_update($selected_id) {
	global $Translation;

	// mm: can member edit record?
	$arrPerm=getTablePermissions('missions');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='missions' and pkValue='".makeSafe($selected_id)."'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='missions' and pkValue='".makeSafe($selected_id)."'");
	if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3) { // allow update?
		// update allowed, so continue ...
	}else{
		return false;
	}

	$data['id_consultant'] = makeSafe($_REQUEST['id_consultant']);
		if($data['id_consultant'] == empty_lookup_value) { $data['id_consultant'] = ''; }
	$data['rattache_a_filiere'] = makeSafe($_REQUEST['rattache_a_filiere']);
		if($data['rattache_a_filiere'] == empty_lookup_value) { $data['rattache_a_filiere'] = ''; }
	$data['site_mission'] = makeSafe($_REQUEST['site_mission']);
		if($data['site_mission'] == empty_lookup_value) { $data['site_mission'] = ''; }
	$data['periode'] = makeSafe($_REQUEST['periode']);
		if($data['periode'] == empty_lookup_value) { $data['periode'] = ''; }
	$data['date_debut'] = intval($_REQUEST['date_debutYear']) . '-' . intval($_REQUEST['date_debutMonth']) . '-' . intval($_REQUEST['date_debutDay']);
	$data['date_debut'] = parseMySQLDate($data['date_debut'], '');
	$data['date_fin'] = intval($_REQUEST['date_finYear']) . '-' . intval($_REQUEST['date_finMonth']) . '-' . intval($_REQUEST['date_finDay']);
	$data['date_fin'] = parseMySQLDate($data['date_fin'], '');
	$data['description_mission'] = br2nl(makeSafe($_REQUEST['description_mission']));
	if($data['description_mission']=='') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Objet de la mission': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['description_detaille'] = makeSafe($_REQUEST['description_detaille']);
		if($data['description_detaille'] == empty_lookup_value) { $data['description_detaille'] = ''; }
	$data['client'] = makeSafe($_REQUEST['client']);
		if($data['client'] == empty_lookup_value) { $data['client'] = ''; }
	$data['environnement'] = makeSafe($_REQUEST['environnement']);
		if($data['environnement'] == empty_lookup_value) { $data['environnement'] = ''; }
	$data['competences_utilisees'] = makeSafe($_REQUEST['competences_utilisees']);
		if($data['competences_utilisees'] == empty_lookup_value) { $data['competences_utilisees'] = ''; }
	$data['selectedID'] = makeSafe($selected_id);

	// hook: missions_before_update
	if(function_exists('missions_before_update')) {
		$args = array();
		if(!missions_before_update($data, getMemberInfo(), $args)) { return false; }
	}

	$o = array('silentErrors' => true);
	sql('update `missions` set       `id_consultant`=' . (($data['id_consultant'] !== '' && $data['id_consultant'] !== NULL) ? "'{$data['id_consultant']}'" : 'NULL') . ', `site_mission`=' . (($data['site_mission'] !== '' && $data['site_mission'] !== NULL) ? "'{$data['site_mission']}'" : 'NULL') . ', `periode`=' . (($data['periode'] !== '' && $data['periode'] !== NULL) ? "'{$data['periode']}'" : 'NULL') . ', `date_debut`=' . (($data['date_debut'] !== '' && $data['date_debut'] !== NULL) ? "'{$data['date_debut']}'" : 'NULL') . ', `date_fin`=' . (($data['date_fin'] !== '' && $data['date_fin'] !== NULL) ? "'{$data['date_fin']}'" : 'NULL') . ', `description_mission`=' . (($data['description_mission'] !== '' && $data['description_mission'] !== NULL) ? "'{$data['description_mission']}'" : 'NULL') . ', `description_detaille`=' . (($data['description_detaille'] !== '' && $data['description_detaille'] !== NULL) ? "'{$data['description_detaille']}'" : 'NULL') . ', `client`=' . (($data['client'] !== '' && $data['client'] !== NULL) ? "'{$data['client']}'" : 'NULL') . ', `environnement`=' . (($data['environnement'] !== '' && $data['environnement'] !== NULL) ? "'{$data['environnement']}'" : 'NULL') . ', `competences_utilisees`=' . (($data['competences_utilisees'] !== '' && $data['competences_utilisees'] !== NULL) ? "'{$data['competences_utilisees']}'" : 'NULL') . " where `id_mission`='".makeSafe($selected_id)."'", $o);
	if($o['error']!='') {
		echo $o['error'];
		echo '<a href="missions_view.php?SelectedID='.urlencode($selected_id)."\">{$Translation['< back']}</a>";
		exit;
	}


	// hook: missions_after_update
	if(function_exists('missions_after_update')) {
		$res = sql("SELECT * FROM `missions` WHERE `id_mission`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) {
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = $data['id_mission'];
		$args = array();
		if(!missions_after_update($data, getMemberInfo(), $args)) { return; }
	}

	// mm: update ownership data
	sql("update `membership_userrecords` set `dateUpdated`='" . time() . "' where `tableName`='missions' and `pkValue`='" . makeSafe($selected_id) . "'", $eo);

}

function missions_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $ShowCancel = 0, $TemplateDV = '', $TemplateDVP = '') {
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;

	// mm: get table permissions
	$arrPerm=getTablePermissions('missions');
	if(!$arrPerm[1] && $selected_id=='') { return ''; }
	$AllowInsert = ($arrPerm[1] ? true : false);
	// print preview?
	$dvprint = false;
	if($selected_id && $_REQUEST['dvprint_x'] != '') {
		$dvprint = true;
	}

	$filterer_id_consultant = thisOr(undo_magic_quotes($_REQUEST['filterer_id_consultant']), '');
	$filterer_rattache_a_filiere = thisOr(undo_magic_quotes($_REQUEST['filterer_rattache_a_filiere']), '');
	$filterer_client = thisOr(undo_magic_quotes($_REQUEST['filterer_client']), '');
	$filterer_competences_utilisees = thisOr(undo_magic_quotes($_REQUEST['filterer_competences_utilisees']), '');

	// populate filterers, starting from children to grand-parents
	if($filterer_rattache_a_filiere && !$filterer_id_consultant) $filterer_id_consultant = sqlValue("select  from filiere where id_filiere='" . makeSafe($filterer_rattache_a_filiere) . "'");

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: id_consultant
	$combo_id_consultant = new DataCombo;
	// combobox: rattache_a_filiere, filterable by: id_consultant
	$combo_rattache_a_filiere = new DataCombo;
	// combobox: date_debut
	$combo_date_debut = new DateCombo;
	$combo_date_debut->DateFormat = "dmy";
	$combo_date_debut->MinYear = 1900;
	$combo_date_debut->MaxYear = 2100;
	$combo_date_debut->DefaultDate = parseMySQLDate('', '');
	$combo_date_debut->MonthNames = $Translation['month names'];
	$combo_date_debut->NamePrefix = 'date_debut';
	// combobox: date_fin
	$combo_date_fin = new DateCombo;
	$combo_date_fin->DateFormat = "dmy";
	$combo_date_fin->MinYear = 1900;
	$combo_date_fin->MaxYear = 2100;
	$combo_date_fin->DefaultDate = parseMySQLDate('', '');
	$combo_date_fin->MonthNames = $Translation['month names'];
	$combo_date_fin->NamePrefix = 'date_fin';
	// combobox: client
	$combo_client = new DataCombo;
	// combobox: competences_utilisees
	$combo_competences_utilisees = new DataCombo;

	if($selected_id) {
		// mm: check member permissions
		if(!$arrPerm[2]) {
			return "";
		}
		// mm: who is the owner?
		$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='missions' and pkValue='".makeSafe($selected_id)."'");
		$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='missions' and pkValue='".makeSafe($selected_id)."'");
		if($arrPerm[2]==1 && getLoggedMemberID()!=$ownerMemberID) {
			return "";
		}
		if($arrPerm[2]==2 && getLoggedGroupID()!=$ownerGroupID) {
			return "";
		}

		// can edit?
		if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3) {
			$AllowUpdate=1;
		}else{
			$AllowUpdate=0;
		}

		$res = sql("SELECT * FROM `missions` WHERE `id_mission`='" . makeSafe($selected_id) . "'", $eo);
		if(!($row = db_fetch_array($res))) {
			return error_message($Translation['No records found'], 'missions_view.php', false);
		}
		$combo_id_consultant->SelectedData = $row['id_consultant'];
		$combo_rattache_a_filiere->SelectedData = $row['rattache_a_filiere'];
		$combo_date_debut->DefaultDate = $row['date_debut'];
		$combo_date_fin->DefaultDate = $row['date_fin'];
		$combo_client->SelectedData = $row['client'];
		$combo_competences_utilisees->SelectedData = $row['competences_utilisees'];
		$urow = $row; /* unsanitized data */
		$hc = new CI_Input();
		$row = $hc->xss_clean($row); /* sanitize data */
	} else {
		$combo_id_consultant->SelectedData = $filterer_id_consultant;
		$combo_rattache_a_filiere->SelectedData = $filterer_rattache_a_filiere;
		$combo_client->SelectedData = $filterer_client;
		$combo_competences_utilisees->SelectedData = $filterer_competences_utilisees;
	}
	$combo_id_consultant->HTML = '<span id="id_consultant-container' . $rnd1 . '"></span><input type="hidden" name="id_consultant" id="id_consultant' . $rnd1 . '" value="' . html_attr($combo_id_consultant->SelectedData) . '">';
	$combo_id_consultant->MatchText = '<span id="id_consultant-container-readonly' . $rnd1 . '"></span><input type="hidden" name="id_consultant" id="id_consultant' . $rnd1 . '" value="' . html_attr($combo_id_consultant->SelectedData) . '">';
	$combo_rattache_a_filiere->HTML = '<span id="rattache_a_filiere-container' . $rnd1 . '"></span><input type="hidden" name="rattache_a_filiere" id="rattache_a_filiere' . $rnd1 . '" value="' . html_attr($combo_rattache_a_filiere->SelectedData) . '">';
	$combo_rattache_a_filiere->MatchText = '<span id="rattache_a_filiere-container-readonly' . $rnd1 . '"></span><input type="hidden" name="rattache_a_filiere" id="rattache_a_filiere' . $rnd1 . '" value="' . html_attr($combo_rattache_a_filiere->SelectedData) . '">';
	$combo_client->HTML = '<span id="client-container' . $rnd1 . '"></span><input type="hidden" name="client" id="client' . $rnd1 . '" value="' . html_attr($combo_client->SelectedData) . '">';
	$combo_client->MatchText = '<span id="client-container-readonly' . $rnd1 . '"></span><input type="hidden" name="client" id="client' . $rnd1 . '" value="' . html_attr($combo_client->SelectedData) . '">';
	$combo_competences_utilisees->HTML = '<span id="competences_utilisees-container' . $rnd1 . '"></span><input type="hidden" name="competences_utilisees" id="competences_utilisees' . $rnd1 . '" value="' . html_attr($combo_competences_utilisees->SelectedData) . '">';
	$combo_competences_utilisees->MatchText = '<span id="competences_utilisees-container-readonly' . $rnd1 . '"></span><input type="hidden" name="competences_utilisees" id="competences_utilisees' . $rnd1 . '" value="' . html_attr($combo_competences_utilisees->SelectedData) . '">';

	ob_start();
	?>

	<script>
		// initial lookup values
		AppGini.current_id_consultant__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['id_consultant'] : $filterer_id_consultant); ?>"};
		AppGini.current_rattache_a_filiere__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['rattache_a_filiere'] : $filterer_rattache_a_filiere); ?>"};
		AppGini.current_client__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['client'] : $filterer_client); ?>"};
		AppGini.current_competences_utilisees__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['competences_utilisees'] : $filterer_competences_utilisees); ?>"};

		jQuery(function() {
			setTimeout(function() {
				if(typeof(id_consultant_reload__RAND__) == 'function') id_consultant_reload__RAND__();
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(rattache_a_filiere_reload__RAND__) == \'function\') rattache_a_filiere_reload__RAND__(AppGini.current_id_consultant__RAND__.value);' : ''); ?>
				if(typeof(client_reload__RAND__) == 'function') client_reload__RAND__();
				if(typeof(competences_utilisees_reload__RAND__) == 'function') competences_utilisees_reload__RAND__();
			}, 10); /* we need to slightly delay client-side execution of the above code to allow AppGini.ajaxCache to work */
		});
		function id_consultant_reload__RAND__() {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#id_consultant-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_id_consultant__RAND__.value, t: 'missions', f: 'id_consultant' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="id_consultant"]').val(resp.results[0].id);
							$j('[id=id_consultant-container-readonly__RAND__]').html('<span id="id_consultant-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=consultant_view_parent]').hide(); }else{ $j('.btn[id=consultant_view_parent]').show(); }

						if(typeof(rattache_a_filiere_reload__RAND__) == 'function') rattache_a_filiere_reload__RAND__(AppGini.current_id_consultant__RAND__.value);

							if(typeof(id_consultant_update_autofills__RAND__) == 'function') id_consultant_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { /* */ return { s: term, p: page, t: 'missions', f: 'id_consultant' }; },
					results: function(resp, page) { /* */ return resp; }
				},
				escapeMarkup: function(str) { /* */ return str; }
			}).on('change', function(e) {
				AppGini.current_id_consultant__RAND__.value = e.added.id;
				AppGini.current_id_consultant__RAND__.text = e.added.text;
				$j('[name="id_consultant"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=consultant_view_parent]').hide(); }else{ $j('.btn[id=consultant_view_parent]').show(); }

						if(typeof(rattache_a_filiere_reload__RAND__) == 'function') rattache_a_filiere_reload__RAND__(AppGini.current_id_consultant__RAND__.value);

				if(typeof(id_consultant_update_autofills__RAND__) == 'function') id_consultant_update_autofills__RAND__();
			});

			if(!$j("#id_consultant-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_id_consultant__RAND__.value, t: 'missions', f: 'id_consultant' },
					success: function(resp) {
						$j('[name="id_consultant"]').val(resp.results[0].id);
						$j('[id=id_consultant-container-readonly__RAND__]').html('<span id="id_consultant-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=consultant_view_parent]').hide(); }else{ $j('.btn[id=consultant_view_parent]').show(); }

						if(typeof(id_consultant_update_autofills__RAND__) == 'function') id_consultant_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_id_consultant__RAND__.value, t: 'missions', f: 'id_consultant' },
				success: function(resp) {
					$j('[id=id_consultant-container__RAND__], [id=id_consultant-container-readonly__RAND__]').html('<span id="id_consultant-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=consultant_view_parent]').hide(); }else{ $j('.btn[id=consultant_view_parent]').show(); }

					if(typeof(id_consultant_update_autofills__RAND__) == 'function') id_consultant_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function rattache_a_filiere_reload__RAND__(filterer_id_consultant) {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#rattache_a_filiere-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_id_consultant: filterer_id_consultant, id: AppGini.current_rattache_a_filiere__RAND__.value, t: 'missions', f: 'rattache_a_filiere' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="rattache_a_filiere"]').val(resp.results[0].id);
							$j('[id=rattache_a_filiere-container-readonly__RAND__]').html('<span id="rattache_a_filiere-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=filiere_view_parent]').hide(); }else{ $j('.btn[id=filiere_view_parent]').show(); }


							if(typeof(rattache_a_filiere_update_autofills__RAND__) == 'function') rattache_a_filiere_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { /* */ return { filterer_id_consultant: filterer_id_consultant, s: term, p: page, t: 'missions', f: 'rattache_a_filiere' }; },
					results: function(resp, page) { /* */ return resp; }
				},
				escapeMarkup: function(str) { /* */ return str; }
			}).on('change', function(e) {
				AppGini.current_rattache_a_filiere__RAND__.value = e.added.id;
				AppGini.current_rattache_a_filiere__RAND__.text = e.added.text;
				$j('[name="rattache_a_filiere"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=filiere_view_parent]').hide(); }else{ $j('.btn[id=filiere_view_parent]').show(); }


				if(typeof(rattache_a_filiere_update_autofills__RAND__) == 'function') rattache_a_filiere_update_autofills__RAND__();
			});

			if(!$j("#rattache_a_filiere-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_rattache_a_filiere__RAND__.value, t: 'missions', f: 'rattache_a_filiere' },
					success: function(resp) {
						$j('[name="rattache_a_filiere"]').val(resp.results[0].id);
						$j('[id=rattache_a_filiere-container-readonly__RAND__]').html('<span id="rattache_a_filiere-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=filiere_view_parent]').hide(); }else{ $j('.btn[id=filiere_view_parent]').show(); }

						if(typeof(rattache_a_filiere_update_autofills__RAND__) == 'function') rattache_a_filiere_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_rattache_a_filiere__RAND__.value, t: 'missions', f: 'rattache_a_filiere' },
				success: function(resp) {
					$j('[id=rattache_a_filiere-container__RAND__], [id=rattache_a_filiere-container-readonly__RAND__]').html('<span id="rattache_a_filiere-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=filiere_view_parent]').hide(); }else{ $j('.btn[id=filiere_view_parent]').show(); }

					if(typeof(rattache_a_filiere_update_autofills__RAND__) == 'function') rattache_a_filiere_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function client_reload__RAND__() {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#client-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_client__RAND__.value, t: 'missions', f: 'client' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="client"]').val(resp.results[0].id);
							$j('[id=client-container-readonly__RAND__]').html('<span id="client-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=client_view_parent]').hide(); }else{ $j('.btn[id=client_view_parent]').show(); }


							if(typeof(client_update_autofills__RAND__) == 'function') client_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { /* */ return { s: term, p: page, t: 'missions', f: 'client' }; },
					results: function(resp, page) { /* */ return resp; }
				},
				escapeMarkup: function(str) { /* */ return str; }
			}).on('change', function(e) {
				AppGini.current_client__RAND__.value = e.added.id;
				AppGini.current_client__RAND__.text = e.added.text;
				$j('[name="client"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=client_view_parent]').hide(); }else{ $j('.btn[id=client_view_parent]').show(); }


				if(typeof(client_update_autofills__RAND__) == 'function') client_update_autofills__RAND__();
			});

			if(!$j("#client-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_client__RAND__.value, t: 'missions', f: 'client' },
					success: function(resp) {
						$j('[name="client"]').val(resp.results[0].id);
						$j('[id=client-container-readonly__RAND__]').html('<span id="client-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=client_view_parent]').hide(); }else{ $j('.btn[id=client_view_parent]').show(); }

						if(typeof(client_update_autofills__RAND__) == 'function') client_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_client__RAND__.value, t: 'missions', f: 'client' },
				success: function(resp) {
					$j('[id=client-container__RAND__], [id=client-container-readonly__RAND__]').html('<span id="client-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=client_view_parent]').hide(); }else{ $j('.btn[id=client_view_parent]').show(); }

					if(typeof(client_update_autofills__RAND__) == 'function') client_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function competences_utilisees_reload__RAND__() {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#competences_utilisees-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_competences_utilisees__RAND__.value, t: 'missions', f: 'competences_utilisees' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="competences_utilisees"]').val(resp.results[0].id);
							$j('[id=competences_utilisees-container-readonly__RAND__]').html('<span id="competences_utilisees-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=competences_ref_view_parent]').hide(); }else{ $j('.btn[id=competences_ref_view_parent]').show(); }


							if(typeof(competences_utilisees_update_autofills__RAND__) == 'function') competences_utilisees_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { /* */ return { s: term, p: page, t: 'missions', f: 'competences_utilisees' }; },
					results: function(resp, page) { /* */ return resp; }
				},
				escapeMarkup: function(str) { /* */ return str; }
			}).on('change', function(e) {
				AppGini.current_competences_utilisees__RAND__.value = e.added.id;
				AppGini.current_competences_utilisees__RAND__.text = e.added.text;
				$j('[name="competences_utilisees"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=competences_ref_view_parent]').hide(); }else{ $j('.btn[id=competences_ref_view_parent]').show(); }


				if(typeof(competences_utilisees_update_autofills__RAND__) == 'function') competences_utilisees_update_autofills__RAND__();
			});

			if(!$j("#competences_utilisees-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_competences_utilisees__RAND__.value, t: 'missions', f: 'competences_utilisees' },
					success: function(resp) {
						$j('[name="competences_utilisees"]').val(resp.results[0].id);
						$j('[id=competences_utilisees-container-readonly__RAND__]').html('<span id="competences_utilisees-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=competences_ref_view_parent]').hide(); }else{ $j('.btn[id=competences_ref_view_parent]').show(); }

						if(typeof(competences_utilisees_update_autofills__RAND__) == 'function') competences_utilisees_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_competences_utilisees__RAND__.value, t: 'missions', f: 'competences_utilisees' },
				success: function(resp) {
					$j('[id=competences_utilisees-container__RAND__], [id=competences_utilisees-container-readonly__RAND__]').html('<span id="competences_utilisees-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=competences_ref_view_parent]').hide(); }else{ $j('.btn[id=competences_ref_view_parent]').show(); }

					if(typeof(competences_utilisees_update_autofills__RAND__) == 'function') competences_utilisees_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_contents());
	ob_end_clean();


	// code for template based detail view forms

	// open the detail view template
	if($dvprint) {
		$template_file = is_file("./{$TemplateDVP}") ? "./{$TemplateDVP}" : './templates/missions_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	}else{
		$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/missions_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Mission details', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', ($_REQUEST['Embedded'] ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($arrPerm[1] && !$selected_id) { // allow insert and no record selected?
		if(!$selected_id) $templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return missions_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return missions_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	}else{
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if($_REQUEST['Embedded']) {
		$backAction = 'AppGini.closeParentModal(); return false;';
	}else{
		$backAction = '$j(\'form\').eq(0).attr(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id) {
		if(!$_REQUEST['Embedded']) $templateCode = str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$j(\'form\').eq(0).prop(\'novalidate\', true); document.myform.reset(); return true;" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate) {
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return missions_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		}else{
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3) { // allow delete?
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		}else{
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	}else{
		$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', ($ShowCancel ? '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>' : ''), $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate) || (!$selected_id && !$AllowInsert)) {
		$jsReadOnly .= "\tjQuery('#id_consultant').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#id_consultant_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#site_mission').replaceWith('<div class=\"form-control-static\" id=\"site_mission\">' + (jQuery('#site_mission').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#periode').replaceWith('<div class=\"form-control-static\" id=\"periode\">' + (jQuery('#periode').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#date_debut').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#date_debutDay, #date_debutMonth, #date_debutYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#date_fin').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#date_finDay, #date_finMonth, #date_finYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#description_mission').replaceWith('<div class=\"form-control-static\" id=\"description_mission\">' + (jQuery('#description_mission').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#client').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#client_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#environnement').replaceWith('<div class=\"form-control-static\" id=\"environnement\">' + (jQuery('#environnement').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#competences_utilisees').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#competences_utilisees_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	}elseif(($AllowInsert && !$selected_id) || ($AllowUpdate && $selected_id)) {
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
			$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode = str_replace('<%%COMBO(id_consultant)%%>', $combo_id_consultant->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(id_consultant)%%>', $combo_id_consultant->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(id_consultant)%%>', urlencode($combo_id_consultant->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(rattache_a_filiere)%%>', $combo_rattache_a_filiere->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(rattache_a_filiere)%%>', $combo_rattache_a_filiere->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(rattache_a_filiere)%%>', urlencode($combo_rattache_a_filiere->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(date_debut)%%>', ($selected_id && !$arrPerm[3] ? '<div class="form-control-static">' . $combo_date_debut->GetHTML(true) . '</div>' : $combo_date_debut->GetHTML()), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(date_debut)%%>', $combo_date_debut->GetHTML(true), $templateCode);
	$templateCode = str_replace('<%%COMBO(date_fin)%%>', ($selected_id && !$arrPerm[3] ? '<div class="form-control-static">' . $combo_date_fin->GetHTML(true) . '</div>' : $combo_date_fin->GetHTML()), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(date_fin)%%>', $combo_date_fin->GetHTML(true), $templateCode);
	$templateCode = str_replace('<%%COMBO(client)%%>', $combo_client->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(client)%%>', $combo_client->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(client)%%>', urlencode($combo_client->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(competences_utilisees)%%>', $combo_competences_utilisees->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(competences_utilisees)%%>', $combo_competences_utilisees->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(competences_utilisees)%%>', urlencode($combo_competences_utilisees->MatchText), $templateCode);

	/* lookup fields array: 'lookup field name' => array('parent table name', 'lookup field caption') */
	$lookup_fields = array('id_consultant' => array('consultant', 'Consultant'), 'rattache_a_filiere' => array('filiere', 'Fili&#232;re'), 'client' => array('client', 'Client'), 'competences_utilisees' => array('competences_ref', 'Comp&#233;tences utilis&#233;es'), );
	foreach($lookup_fields as $luf => $ptfc) {
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']) {
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent hspacer-md" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] && !$_REQUEST['Embedded']) {
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-success add_new_parent hspacer-md" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus-sign"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode = str_replace('<%%UPLOADFILE(id_mission)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(id_consultant)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(rattache_a_filiere)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(site_mission)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(periode)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(date_debut)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(date_fin)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(description_mission)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(description_detaille)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(client)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(environnement)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(competences_utilisees)%%>', '', $templateCode);

	// process values
	if($selected_id) {
		if( $dvprint) $templateCode = str_replace('<%%VALUE(id_mission)%%>', safe_html($urow['id_mission']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(id_mission)%%>', html_attr($row['id_mission']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id_mission)%%>', urlencode($urow['id_mission']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(id_consultant)%%>', safe_html($urow['id_consultant']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(id_consultant)%%>', html_attr($row['id_consultant']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id_consultant)%%>', urlencode($urow['id_consultant']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(rattache_a_filiere)%%>', safe_html($urow['rattache_a_filiere']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(rattache_a_filiere)%%>', html_attr($row['rattache_a_filiere']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(rattache_a_filiere)%%>', urlencode($urow['rattache_a_filiere']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(site_mission)%%>', safe_html($urow['site_mission']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(site_mission)%%>', html_attr($row['site_mission']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(site_mission)%%>', urlencode($urow['site_mission']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(periode)%%>', safe_html($urow['periode']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(periode)%%>', html_attr($row['periode']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(periode)%%>', urlencode($urow['periode']), $templateCode);
		$templateCode = str_replace('<%%VALUE(date_debut)%%>', @date('d/m/Y', @strtotime(html_attr($row['date_debut']))), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(date_debut)%%>', urlencode(@date('d/m/Y', @strtotime(html_attr($urow['date_debut'])))), $templateCode);
		$templateCode = str_replace('<%%VALUE(date_fin)%%>', @date('d/m/Y', @strtotime(html_attr($row['date_fin']))), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(date_fin)%%>', urlencode(@date('d/m/Y', @strtotime(html_attr($urow['date_fin'])))), $templateCode);
		if($dvprint || (!$AllowUpdate && !$AllowInsert)) {
			$templateCode = str_replace('<%%VALUE(description_mission)%%>', safe_html($urow['description_mission']), $templateCode);
		}else{
			$templateCode = str_replace('<%%VALUE(description_mission)%%>', html_attr($row['description_mission']), $templateCode);
		}
		$templateCode = str_replace('<%%URLVALUE(description_mission)%%>', urlencode($urow['description_mission']), $templateCode);
		if($AllowUpdate || $AllowInsert) {
			$templateCode = str_replace('<%%HTMLAREA(description_detaille)%%>', '<textarea name="description_detaille" id="description_detaille" rows="5">' . html_attr($row['description_detaille']) . '</textarea>', $templateCode);
		}else{
			$templateCode = str_replace('<%%HTMLAREA(description_detaille)%%>', '<div id="description_detaille" class="form-control-static">' . $row['description_detaille'] . '</div>', $templateCode);
		}
		$templateCode = str_replace('<%%VALUE(description_detaille)%%>', nl2br($row['description_detaille']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(description_detaille)%%>', urlencode($urow['description_detaille']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(client)%%>', safe_html($urow['client']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(client)%%>', html_attr($row['client']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(client)%%>', urlencode($urow['client']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(environnement)%%>', safe_html($urow['environnement']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(environnement)%%>', html_attr($row['environnement']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(environnement)%%>', urlencode($urow['environnement']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(competences_utilisees)%%>', safe_html($urow['competences_utilisees']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(competences_utilisees)%%>', html_attr($row['competences_utilisees']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(competences_utilisees)%%>', urlencode($urow['competences_utilisees']), $templateCode);
	}else{
		$templateCode = str_replace('<%%VALUE(id_mission)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id_mission)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(id_consultant)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id_consultant)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(rattache_a_filiere)%%>', ( $_REQUEST['FilterField'][1]=='3' && $_REQUEST['FilterOperator'][1]=='<=>' ? $combo_rattache_a_filiere->SelectedData : ''), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(rattache_a_filiere)%%>', urlencode( $_REQUEST['FilterField'][1]=='3' && $_REQUEST['FilterOperator'][1]=='<=>' ? $combo_rattache_a_filiere->SelectedData : ''), $templateCode);
		$templateCode = str_replace('<%%VALUE(site_mission)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(site_mission)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(periode)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(periode)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(date_debut)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(date_debut)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(date_fin)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(date_fin)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(description_mission)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(description_mission)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%HTMLAREA(description_detaille)%%>', '<textarea name="description_detaille" id="description_detaille" rows="5"></textarea>', $templateCode);
		$templateCode = str_replace('<%%VALUE(client)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(client)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(environnement)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(environnement)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(competences_utilisees)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(competences_utilisees)%%>', urlencode(''), $templateCode);
	}

	// process translations
	foreach($Translation as $symbol=>$trans) {
		$templateCode = str_replace("<%%TRANSLATION($symbol)%%>", $trans, $templateCode);
	}

	// clear scrap
	$templateCode = str_replace('<%%', '<!-- ', $templateCode);
	$templateCode = str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if($_REQUEST['dvprint_x'] == '') {
		$templateCode .= "\n\n<script>\$j(function() {\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption) {
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id) {
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('missions');
	if($selected_id) {
		$jdata = get_joined_record('missions', $selected_id);
		if($jdata === false) $jdata = get_defaults('missions');
		$rdata = $row;
	}
	$templateCode .= loadView('missions-ajax-cache', array('rdata' => $rdata, 'jdata' => $jdata));

	// hook: missions_dv
	if(function_exists('missions_dv')) {
		$args=array();
		missions_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}
?>