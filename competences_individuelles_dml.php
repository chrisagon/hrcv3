<?php

// Data functions (insert, update, delete, form) for table competences_individuelles

// This script and data application were generated by AppGini 5.81
// Download AppGini for free from https://bigprof.com/appgini/download/

function competences_individuelles_insert() {
	global $Translation;

	// mm: can member insert record?
	$arrPerm = getTablePermissions('competences_individuelles');
	if(!$arrPerm[1]) return false;

	$data = array();
	$data['Competences_specifiques'] = $_REQUEST['Competences_specifiques'];
		if($data['Competences_specifiques'] == empty_lookup_value) { $data['Competences_specifiques'] = ''; }
	$data['competence_mis_en_oeuvre'] = $_REQUEST['competence_mis_en_oeuvre'];
		if($data['competence_mis_en_oeuvre'] == empty_lookup_value) { $data['competence_mis_en_oeuvre'] = ''; }
	$data['niveau'] = $_REQUEST['niveau'];
		if($data['niveau'] == empty_lookup_value) { $data['niveau'] = ''; }
	$data['consultant_id'] = $_REQUEST['consultant_id'];
		if($data['consultant_id'] == empty_lookup_value) { $data['consultant_id'] = ''; }
	$data['commentaires'] = $_REQUEST['commentaires'];
		if($data['commentaires'] == empty_lookup_value) { $data['commentaires'] = ''; }
	$data['tags'] = '';
	if(is_array($_REQUEST['tags'])) {
		$MultipleSeparator = ', ';
		$data['tags'] = implode($MultipleSeparator, $_REQUEST['tags']);
	}
	$data['Documents_capitalises'] = PrepareUploadedFile('Documents_capitalises', 102400,'txt|doc|docx|docm|odt|pdf|rtf', false, '');
	if($data['competence_mis_en_oeuvre']== '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'Competence r&#233;f. mis en oeuvre': " . $Translation['field not null'] . '<br><br>';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	if($data['niveau']== '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'Niveau de la comp&#233;tence': " . $Translation['field not null'] . '<br><br>';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	if($data['consultant_id']== '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'detenu par': " . $Translation['field not null'] . '<br><br>';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}

	/* for empty upload fields, when saving a copy of an existing record, copy the original upload field */
	if($_REQUEST['SelectedID']) {
		$res = sql("select * from competences_individuelles where id_comp_indiv='" . makeSafe($_REQUEST['SelectedID']) . "'", $eo);
		if($row = db_fetch_assoc($res)) {
			if(!$data['Documents_capitalises']) $data['Documents_capitalises'] = $row['Documents_capitalises'];
		}
	}

	// hook: competences_individuelles_before_insert
	if(function_exists('competences_individuelles_before_insert')) {
		$args = array();
		if(!competences_individuelles_before_insert($data, getMemberInfo(), $args)) { return false; }
	}

	$error = '';
	// set empty fields to NULL
	$data = array_map(function($v) { return ($v === '' ? NULL : $v); }, $data);
	insert('competences_individuelles', backtick_keys_once($data), $error);
	if($error)
		die("{$error}<br><a href=\"#\" onclick=\"history.go(-1);\">{$Translation['< back']}</a>");

	$recID = db_insert_id(db_link());

	// hook: competences_individuelles_after_insert
	if(function_exists('competences_individuelles_after_insert')) {
		$res = sql("select * from `competences_individuelles` where `id_comp_indiv`='" . makeSafe($recID, false) . "' limit 1", $eo);
		if($row = db_fetch_assoc($res)) {
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args=array();
		if(!competences_individuelles_after_insert($data, getMemberInfo(), $args)) { return $recID; }
	}

	// mm: save ownership data
	set_record_owner('competences_individuelles', $recID, getLoggedMemberID());

	// if this record is a copy of another record, copy children if applicable
	if(!empty($_REQUEST['SelectedID'])) competences_individuelles_copy_children($recID, $_REQUEST['SelectedID']);

	return $recID;
}

function competences_individuelles_copy_children($destination_id, $source_id) {
	global $Translation;
	$requests = array(); // array of curl handlers for launching insert requests
	$eo = array('silentErrors' => true);
	$uploads_dir = realpath(dirname(__FILE__) . '/../' . $Translation['ImageFolder']);
	$safe_sid = makeSafe($source_id);

	// launch requests, asynchronously
	curl_batch($requests);
}

function competences_individuelles_delete($selected_id, $AllowDeleteOfParents=false, $skipChecks=false) {
	// insure referential integrity ...
	global $Translation;
	$selected_id=makeSafe($selected_id);

	// mm: can member delete record?
	$arrPerm=getTablePermissions('competences_individuelles');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='competences_individuelles' and pkValue='$selected_id'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='competences_individuelles' and pkValue='$selected_id'");
	if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3) { // allow delete?
		// delete allowed, so continue ...
	}else{
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: competences_individuelles_before_delete
	if(function_exists('competences_individuelles_before_delete')) {
		$args=array();
		if(!competences_individuelles_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'];
	}

	// delete file stored in the 'Documents_capitalises' field
	$res = sql("select `Documents_capitalises` from `competences_individuelles` where `id_comp_indiv`='$selected_id'", $eo);
	if($row=@db_fetch_row($res)) {
		if($row[0]!='') {
			@unlink(getUploadDir('').$row[0]);
		}
	}

	sql("delete from `competences_individuelles` where `id_comp_indiv`='$selected_id'", $eo);

	// hook: competences_individuelles_after_delete
	if(function_exists('competences_individuelles_after_delete')) {
		$args=array();
		competences_individuelles_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("delete from membership_userrecords where tableName='competences_individuelles' and pkValue='$selected_id'", $eo);
}

function competences_individuelles_update($selected_id) {
	global $Translation;

	// mm: can member edit record?
	$arrPerm=getTablePermissions('competences_individuelles');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='competences_individuelles' and pkValue='".makeSafe($selected_id)."'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='competences_individuelles' and pkValue='".makeSafe($selected_id)."'");
	if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3) { // allow update?
		// update allowed, so continue ...
	}else{
		return false;
	}

	$data['Competences_specifiques'] = makeSafe($_REQUEST['Competences_specifiques']);
		if($data['Competences_specifiques'] == empty_lookup_value) { $data['Competences_specifiques'] = ''; }
	$data['competence_mis_en_oeuvre'] = makeSafe($_REQUEST['competence_mis_en_oeuvre']);
		if($data['competence_mis_en_oeuvre'] == empty_lookup_value) { $data['competence_mis_en_oeuvre'] = ''; }
	if($data['competence_mis_en_oeuvre']=='') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Competence r&#233;f. mis en oeuvre': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['niveau'] = makeSafe($_REQUEST['niveau']);
		if($data['niveau'] == empty_lookup_value) { $data['niveau'] = ''; }
	if($data['niveau']=='') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Niveau de la comp&#233;tence': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['consultant_id'] = makeSafe($_REQUEST['consultant_id']);
		if($data['consultant_id'] == empty_lookup_value) { $data['consultant_id'] = ''; }
	if($data['consultant_id']=='') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'detenu par': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['commentaires'] = makeSafe($_REQUEST['commentaires']);
		if($data['commentaires'] == empty_lookup_value) { $data['commentaires'] = ''; }
	if(is_array($_REQUEST['tags'])) {
		$MultipleSeparator = ', ';
		foreach($_REQUEST['tags'] as $k => $v)
			$data['tags'] .= makeSafe($v) . $MultipleSeparator;
		$data['tags']=substr($data['tags'], 0, -1 * strlen($MultipleSeparator));
	}else{
		$data['tags']='';
	}
	$data['selectedID'] = makeSafe($selected_id);
	if($_REQUEST['Documents_capitalises_remove'] == 1) {
		$data['Documents_capitalises'] = '';
		// delete file from server
		$res = sql("select `Documents_capitalises` from `competences_individuelles` where `id_comp_indiv`='".makeSafe($selected_id)."'", $eo);
		if($row = @db_fetch_row($res)) {
			if($row[0] != '') {
				@unlink(getUploadDir('') . $row[0]);
			}
		}
	} else {
		$data['Documents_capitalises'] = PrepareUploadedFile('Documents_capitalises', 102400, 'txt|doc|docx|docm|odt|pdf|rtf', false, "");
		// delete file from server
		if($data['Documents_capitalises'] != '') {
			$res = sql("select `Documents_capitalises` from `competences_individuelles` where `id_comp_indiv`='" . makeSafe($selected_id) . "'", $eo);
			if($row = @db_fetch_row($res)) {
				if($row[0] != '') {
					@unlink(getUploadDir('') . $row[0]);
				}
			}
		}
	}

	// hook: competences_individuelles_before_update
	if(function_exists('competences_individuelles_before_update')) {
		$args = array();
		if(!competences_individuelles_before_update($data, getMemberInfo(), $args)) { return false; }
	}

	$o = array('silentErrors' => true);
	sql('update `competences_individuelles` set       `Competences_specifiques`=' . (($data['Competences_specifiques'] !== '' && $data['Competences_specifiques'] !== NULL) ? "'{$data['Competences_specifiques']}'" : 'NULL') . ', `competence_mis_en_oeuvre`=' . (($data['competence_mis_en_oeuvre'] !== '' && $data['competence_mis_en_oeuvre'] !== NULL) ? "'{$data['competence_mis_en_oeuvre']}'" : 'NULL') . ', `niveau`=' . (($data['niveau'] !== '' && $data['niveau'] !== NULL) ? "'{$data['niveau']}'" : 'NULL') . ', `consultant_id`=' . (($data['consultant_id'] !== '' && $data['consultant_id'] !== NULL) ? "'{$data['consultant_id']}'" : 'NULL') . ', ' . ($data['Documents_capitalises']!='' ? "`Documents_capitalises`='{$data['Documents_capitalises']}'" : ($_REQUEST['Documents_capitalises_remove'] != 1 ? '`Documents_capitalises`=`Documents_capitalises`' : '`Documents_capitalises`=NULL')) . ', `commentaires`=' . (($data['commentaires'] !== '' && $data['commentaires'] !== NULL) ? "'{$data['commentaires']}'" : 'NULL') . ', `tags`=' . (($data['tags'] !== '' && $data['tags'] !== NULL) ? "'{$data['tags']}'" : 'NULL') . " where `id_comp_indiv`='".makeSafe($selected_id)."'", $o);
	if($o['error']!='') {
		echo $o['error'];
		echo '<a href="competences_individuelles_view.php?SelectedID='.urlencode($selected_id)."\">{$Translation['< back']}</a>";
		exit;
	}


	// hook: competences_individuelles_after_update
	if(function_exists('competences_individuelles_after_update')) {
		$res = sql("SELECT * FROM `competences_individuelles` WHERE `id_comp_indiv`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) {
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = $data['id_comp_indiv'];
		$args = array();
		if(!competences_individuelles_after_update($data, getMemberInfo(), $args)) { return; }
	}

	// mm: update ownership data
	sql("update `membership_userrecords` set `dateUpdated`='" . time() . "' where `tableName`='competences_individuelles' and `pkValue`='" . makeSafe($selected_id) . "'", $eo);

}

function competences_individuelles_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $ShowCancel = 0, $TemplateDV = '', $TemplateDVP = '') {
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;

	// mm: get table permissions
	$arrPerm=getTablePermissions('competences_individuelles');
	if(!$arrPerm[1] && $selected_id=='') { return ''; }
	$AllowInsert = ($arrPerm[1] ? true : false);
	// print preview?
	$dvprint = false;
	if($selected_id && $_REQUEST['dvprint_x'] != '') {
		$dvprint = true;
	}

	$filterer_competence_mis_en_oeuvre = thisOr(undo_magic_quotes($_REQUEST['filterer_competence_mis_en_oeuvre']), '');
	$filterer_niveau = thisOr(undo_magic_quotes($_REQUEST['filterer_niveau']), '');
	$filterer_consultant_id = thisOr(undo_magic_quotes($_REQUEST['filterer_consultant_id']), '');

	// populate filterers, starting from children to grand-parents

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: competence_mis_en_oeuvre
	$combo_competence_mis_en_oeuvre = new DataCombo;
	// combobox: niveau
	$combo_niveau = new DataCombo;
	// combobox: consultant_id
	$combo_consultant_id = new DataCombo;
	// combobox: tags
	$combo_tags = new Combo;
	$combo_tags->ListType = 3;
	$combo_tags->MultipleSeparator = ', ';
	$combo_tags->ListBoxHeight = 10;
	$combo_tags->RadiosPerLine = 1;
	if(is_file(dirname(__FILE__).'/hooks/competences_individuelles.tags.csv')) {
		$tags_data = addslashes(implode('', @file(dirname(__FILE__).'/hooks/competences_individuelles.tags.csv')));
		$combo_tags->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions($tags_data)));
		$combo_tags->ListData = $combo_tags->ListItem;
	}else{
		$combo_tags->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions("A compl&#233;ter;;important;;A suivre")));
		$combo_tags->ListData = $combo_tags->ListItem;
	}
	$combo_tags->SelectName = 'tags';

	if($selected_id) {
		// mm: check member permissions
		if(!$arrPerm[2]) {
			return "";
		}
		// mm: who is the owner?
		$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='competences_individuelles' and pkValue='".makeSafe($selected_id)."'");
		$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='competences_individuelles' and pkValue='".makeSafe($selected_id)."'");
		if($arrPerm[2]==1 && getLoggedMemberID()!=$ownerMemberID) {
			return "";
		}
		if($arrPerm[2]==2 && getLoggedGroupID()!=$ownerGroupID) {
			return "";
		}

		// can edit?
		if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3) {
			$AllowUpdate=1;
		}else{
			$AllowUpdate=0;
		}

		$res = sql("SELECT * FROM `competences_individuelles` WHERE `id_comp_indiv`='" . makeSafe($selected_id) . "'", $eo);
		if(!($row = db_fetch_array($res))) {
			return error_message($Translation['No records found'], 'competences_individuelles_view.php', false);
		}
		$combo_competence_mis_en_oeuvre->SelectedData = $row['competence_mis_en_oeuvre'];
		$combo_niveau->SelectedData = $row['niveau'];
		$combo_consultant_id->SelectedData = $row['consultant_id'];
		$combo_tags->SelectedData = $row['tags'];
		$urow = $row; /* unsanitized data */
		$hc = new CI_Input();
		$row = $hc->xss_clean($row); /* sanitize data */
	} else {
		$combo_competence_mis_en_oeuvre->SelectedData = $filterer_competence_mis_en_oeuvre;
		$combo_niveau->SelectedData = $filterer_niveau;
		$combo_consultant_id->SelectedData = $filterer_consultant_id;
	}
	$combo_competence_mis_en_oeuvre->HTML = '<span id="competence_mis_en_oeuvre-container' . $rnd1 . '"></span><input type="hidden" name="competence_mis_en_oeuvre" id="competence_mis_en_oeuvre' . $rnd1 . '" value="' . html_attr($combo_competence_mis_en_oeuvre->SelectedData) . '">';
	$combo_competence_mis_en_oeuvre->MatchText = '<span id="competence_mis_en_oeuvre-container-readonly' . $rnd1 . '"></span><input type="hidden" name="competence_mis_en_oeuvre" id="competence_mis_en_oeuvre' . $rnd1 . '" value="' . html_attr($combo_competence_mis_en_oeuvre->SelectedData) . '">';
	$combo_niveau->HTML = '<span id="niveau-container' . $rnd1 . '"></span><input type="hidden" name="niveau" id="niveau' . $rnd1 . '" value="' . html_attr($combo_niveau->SelectedData) . '">';
	$combo_niveau->MatchText = '<span id="niveau-container-readonly' . $rnd1 . '"></span><input type="hidden" name="niveau" id="niveau' . $rnd1 . '" value="' . html_attr($combo_niveau->SelectedData) . '">';
	$combo_consultant_id->HTML = '<span id="consultant_id-container' . $rnd1 . '"></span><input type="hidden" name="consultant_id" id="consultant_id' . $rnd1 . '" value="' . html_attr($combo_consultant_id->SelectedData) . '">';
	$combo_consultant_id->MatchText = '<span id="consultant_id-container-readonly' . $rnd1 . '"></span><input type="hidden" name="consultant_id" id="consultant_id' . $rnd1 . '" value="' . html_attr($combo_consultant_id->SelectedData) . '">';
	$combo_tags->Render();

	ob_start();
	?>

	<script>
		// initial lookup values
		AppGini.current_competence_mis_en_oeuvre__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['competence_mis_en_oeuvre'] : $filterer_competence_mis_en_oeuvre); ?>"};
		AppGini.current_niveau__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['niveau'] : $filterer_niveau); ?>"};
		AppGini.current_consultant_id__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['consultant_id'] : $filterer_consultant_id); ?>"};

		jQuery(function() {
			setTimeout(function() {
				if(typeof(competence_mis_en_oeuvre_reload__RAND__) == 'function') competence_mis_en_oeuvre_reload__RAND__();
				if(typeof(niveau_reload__RAND__) == 'function') niveau_reload__RAND__();
				if(typeof(consultant_id_reload__RAND__) == 'function') consultant_id_reload__RAND__();
			}, 10); /* we need to slightly delay client-side execution of the above code to allow AppGini.ajaxCache to work */
		});
		function competence_mis_en_oeuvre_reload__RAND__() {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#competence_mis_en_oeuvre-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_competence_mis_en_oeuvre__RAND__.value, t: 'competences_individuelles', f: 'competence_mis_en_oeuvre' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="competence_mis_en_oeuvre"]').val(resp.results[0].id);
							$j('[id=competence_mis_en_oeuvre-container-readonly__RAND__]').html('<span id="competence_mis_en_oeuvre-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=competences_ref_view_parent]').hide(); }else{ $j('.btn[id=competences_ref_view_parent]').show(); }


							if(typeof(competence_mis_en_oeuvre_update_autofills__RAND__) == 'function') competence_mis_en_oeuvre_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { /* */ return { s: term, p: page, t: 'competences_individuelles', f: 'competence_mis_en_oeuvre' }; },
					results: function(resp, page) { /* */ return resp; }
				},
				escapeMarkup: function(str) { /* */ return str; }
			}).on('change', function(e) {
				AppGini.current_competence_mis_en_oeuvre__RAND__.value = e.added.id;
				AppGini.current_competence_mis_en_oeuvre__RAND__.text = e.added.text;
				$j('[name="competence_mis_en_oeuvre"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=competences_ref_view_parent]').hide(); }else{ $j('.btn[id=competences_ref_view_parent]').show(); }


				if(typeof(competence_mis_en_oeuvre_update_autofills__RAND__) == 'function') competence_mis_en_oeuvre_update_autofills__RAND__();
			});

			if(!$j("#competence_mis_en_oeuvre-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_competence_mis_en_oeuvre__RAND__.value, t: 'competences_individuelles', f: 'competence_mis_en_oeuvre' },
					success: function(resp) {
						$j('[name="competence_mis_en_oeuvre"]').val(resp.results[0].id);
						$j('[id=competence_mis_en_oeuvre-container-readonly__RAND__]').html('<span id="competence_mis_en_oeuvre-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=competences_ref_view_parent]').hide(); }else{ $j('.btn[id=competences_ref_view_parent]').show(); }

						if(typeof(competence_mis_en_oeuvre_update_autofills__RAND__) == 'function') competence_mis_en_oeuvre_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_competence_mis_en_oeuvre__RAND__.value, t: 'competences_individuelles', f: 'competence_mis_en_oeuvre' },
				success: function(resp) {
					$j('[id=competence_mis_en_oeuvre-container__RAND__], [id=competence_mis_en_oeuvre-container-readonly__RAND__]').html('<span id="competence_mis_en_oeuvre-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=competences_ref_view_parent]').hide(); }else{ $j('.btn[id=competences_ref_view_parent]').show(); }

					if(typeof(competence_mis_en_oeuvre_update_autofills__RAND__) == 'function') competence_mis_en_oeuvre_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function niveau_reload__RAND__() {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#niveau-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_niveau__RAND__.value, t: 'competences_individuelles', f: 'niveau' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="niveau"]').val(resp.results[0].id);
							$j('[id=niveau-container-readonly__RAND__]').html('<span id="niveau-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=niveaux_ref_view_parent]').hide(); }else{ $j('.btn[id=niveaux_ref_view_parent]').show(); }


							if(typeof(niveau_update_autofills__RAND__) == 'function') niveau_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { /* */ return { s: term, p: page, t: 'competences_individuelles', f: 'niveau' }; },
					results: function(resp, page) { /* */ return resp; }
				},
				escapeMarkup: function(str) { /* */ return str; }
			}).on('change', function(e) {
				AppGini.current_niveau__RAND__.value = e.added.id;
				AppGini.current_niveau__RAND__.text = e.added.text;
				$j('[name="niveau"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=niveaux_ref_view_parent]').hide(); }else{ $j('.btn[id=niveaux_ref_view_parent]').show(); }


				if(typeof(niveau_update_autofills__RAND__) == 'function') niveau_update_autofills__RAND__();
			});

			if(!$j("#niveau-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_niveau__RAND__.value, t: 'competences_individuelles', f: 'niveau' },
					success: function(resp) {
						$j('[name="niveau"]').val(resp.results[0].id);
						$j('[id=niveau-container-readonly__RAND__]').html('<span id="niveau-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=niveaux_ref_view_parent]').hide(); }else{ $j('.btn[id=niveaux_ref_view_parent]').show(); }

						if(typeof(niveau_update_autofills__RAND__) == 'function') niveau_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_niveau__RAND__.value, t: 'competences_individuelles', f: 'niveau' },
				success: function(resp) {
					$j('[id=niveau-container__RAND__], [id=niveau-container-readonly__RAND__]').html('<span id="niveau-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=niveaux_ref_view_parent]').hide(); }else{ $j('.btn[id=niveaux_ref_view_parent]').show(); }

					if(typeof(niveau_update_autofills__RAND__) == 'function') niveau_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function consultant_id_reload__RAND__() {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#consultant_id-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_consultant_id__RAND__.value, t: 'competences_individuelles', f: 'consultant_id' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="consultant_id"]').val(resp.results[0].id);
							$j('[id=consultant_id-container-readonly__RAND__]').html('<span id="consultant_id-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=consultant_view_parent]').hide(); }else{ $j('.btn[id=consultant_view_parent]').show(); }


							if(typeof(consultant_id_update_autofills__RAND__) == 'function') consultant_id_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { /* */ return { s: term, p: page, t: 'competences_individuelles', f: 'consultant_id' }; },
					results: function(resp, page) { /* */ return resp; }
				},
				escapeMarkup: function(str) { /* */ return str; }
			}).on('change', function(e) {
				AppGini.current_consultant_id__RAND__.value = e.added.id;
				AppGini.current_consultant_id__RAND__.text = e.added.text;
				$j('[name="consultant_id"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=consultant_view_parent]').hide(); }else{ $j('.btn[id=consultant_view_parent]').show(); }


				if(typeof(consultant_id_update_autofills__RAND__) == 'function') consultant_id_update_autofills__RAND__();
			});

			if(!$j("#consultant_id-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_consultant_id__RAND__.value, t: 'competences_individuelles', f: 'consultant_id' },
					success: function(resp) {
						$j('[name="consultant_id"]').val(resp.results[0].id);
						$j('[id=consultant_id-container-readonly__RAND__]').html('<span id="consultant_id-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=consultant_view_parent]').hide(); }else{ $j('.btn[id=consultant_view_parent]').show(); }

						if(typeof(consultant_id_update_autofills__RAND__) == 'function') consultant_id_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_consultant_id__RAND__.value, t: 'competences_individuelles', f: 'consultant_id' },
				success: function(resp) {
					$j('[id=consultant_id-container__RAND__], [id=consultant_id-container-readonly__RAND__]').html('<span id="consultant_id-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=consultant_view_parent]').hide(); }else{ $j('.btn[id=consultant_view_parent]').show(); }

					if(typeof(consultant_id_update_autofills__RAND__) == 'function') consultant_id_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_contents());
	ob_end_clean();


	// code for template based detail view forms

	// open the detail view template
	if($dvprint) {
		$template_file = is_file("./{$TemplateDVP}") ? "./{$TemplateDVP}" : './templates/competences_individuelles_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	}else{
		$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/competences_individuelles_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Competences individuelle details', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', ($_REQUEST['Embedded'] ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($arrPerm[1] && !$selected_id) { // allow insert and no record selected?
		if(!$selected_id) $templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return competences_individuelles_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return competences_individuelles_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	}else{
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if($_REQUEST['Embedded']) {
		$backAction = 'AppGini.closeParentModal(); return false;';
	}else{
		$backAction = '$j(\'form\').eq(0).attr(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id) {
		if(!$_REQUEST['Embedded']) $templateCode = str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$j(\'form\').eq(0).prop(\'novalidate\', true); document.myform.reset(); return true;" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate) {
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return competences_individuelles_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		}else{
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3) { // allow delete?
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		}else{
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	}else{
		$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', ($ShowCancel ? '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>' : ''), $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate) || (!$selected_id && !$AllowInsert)) {
		$jsReadOnly .= "\tjQuery('#Competences_specifiques').replaceWith('<div class=\"form-control-static\" id=\"Competences_specifiques\">' + (jQuery('#Competences_specifiques').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#competence_mis_en_oeuvre').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#competence_mis_en_oeuvre_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#niveau').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#niveau_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#consultant_id').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#consultant_id_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#Documents_capitalises').replaceWith('<div class=\"form-control-static\" id=\"Documents_capitalises\">' + (jQuery('#Documents_capitalises').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#Documents_capitalises, #Documents_capitalises-edit-link').hide();\n";
		$jsReadOnly .= "\tjQuery('#tags').replaceWith('<div class=\"form-control-static\" id=\"tags\">' + (jQuery('#tags').val() || '') + '</div>'); jQuery('#tags-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#s2id_tags').remove();\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	}elseif(($AllowInsert && !$selected_id) || ($AllowUpdate && $selected_id)) {
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
			$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode = str_replace('<%%COMBO(competence_mis_en_oeuvre)%%>', $combo_competence_mis_en_oeuvre->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(competence_mis_en_oeuvre)%%>', $combo_competence_mis_en_oeuvre->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(competence_mis_en_oeuvre)%%>', urlencode($combo_competence_mis_en_oeuvre->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(niveau)%%>', $combo_niveau->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(niveau)%%>', $combo_niveau->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(niveau)%%>', urlencode($combo_niveau->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(consultant_id)%%>', $combo_consultant_id->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(consultant_id)%%>', $combo_consultant_id->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(consultant_id)%%>', urlencode($combo_consultant_id->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(tags)%%>', $combo_tags->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(tags)%%>', $combo_tags->SelectedData, $templateCode);

	/* lookup fields array: 'lookup field name' => array('parent table name', 'lookup field caption') */
	$lookup_fields = array('competence_mis_en_oeuvre' => array('competences_ref', 'Competence r&#233;f. mis en oeuvre'), 'niveau' => array('niveaux_ref', 'Niveau de la comp&#233;tence'), 'consultant_id' => array('consultant', 'detenu par'), );
	foreach($lookup_fields as $luf => $ptfc) {
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']) {
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent hspacer-md" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] && !$_REQUEST['Embedded']) {
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-success add_new_parent hspacer-md" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus-sign"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode = str_replace('<%%UPLOADFILE(id_comp_indiv)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Competences_specifiques)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(competence_mis_en_oeuvre)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(niveau)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(consultant_id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Documents_capitalises)%%>', ($noUploads ? '' : "<div>{$Translation['upload image']}</div>" . '<i class="glyphicon glyphicon-remove text-danger clear-upload hidden"></i> <input type="file" name="Documents_capitalises" id="Documents_capitalises" data-filetypes="txt|doc|docx|docm|odt|pdf|rtf" data-maxsize="102400">'), $templateCode);
	if($AllowUpdate && $row['Documents_capitalises'] != '') {
		$templateCode = str_replace('<%%REMOVEFILE(Documents_capitalises)%%>', '<br><input type="checkbox" name="Documents_capitalises_remove" id="Documents_capitalises_remove" value="1"> <label for="Documents_capitalises_remove" style="color: red; font-weight: bold;">'.$Translation['remove image'].'</label>', $templateCode);
	}else{
		$templateCode = str_replace('<%%REMOVEFILE(Documents_capitalises)%%>', '', $templateCode);
	}
	$templateCode = str_replace('<%%UPLOADFILE(commentaires)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(tags)%%>', '', $templateCode);

	// process values
	if($selected_id) {
		if( $dvprint) $templateCode = str_replace('<%%VALUE(id_comp_indiv)%%>', safe_html($urow['id_comp_indiv']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(id_comp_indiv)%%>', html_attr($row['id_comp_indiv']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id_comp_indiv)%%>', urlencode($urow['id_comp_indiv']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Competences_specifiques)%%>', safe_html($urow['Competences_specifiques']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Competences_specifiques)%%>', html_attr($row['Competences_specifiques']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Competences_specifiques)%%>', urlencode($urow['Competences_specifiques']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(competence_mis_en_oeuvre)%%>', safe_html($urow['competence_mis_en_oeuvre']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(competence_mis_en_oeuvre)%%>', html_attr($row['competence_mis_en_oeuvre']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(competence_mis_en_oeuvre)%%>', urlencode($urow['competence_mis_en_oeuvre']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(niveau)%%>', safe_html($urow['niveau']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(niveau)%%>', html_attr($row['niveau']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(niveau)%%>', urlencode($urow['niveau']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(consultant_id)%%>', safe_html($urow['consultant_id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(consultant_id)%%>', html_attr($row['consultant_id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(consultant_id)%%>', urlencode($urow['consultant_id']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Documents_capitalises)%%>', safe_html($urow['Documents_capitalises']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Documents_capitalises)%%>', html_attr($row['Documents_capitalises']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Documents_capitalises)%%>', urlencode($urow['Documents_capitalises']), $templateCode);
		if($AllowUpdate || $AllowInsert) {
			$templateCode = str_replace('<%%HTMLAREA(commentaires)%%>', '<textarea name="commentaires" id="commentaires" rows="5">' . html_attr($row['commentaires']) . '</textarea>', $templateCode);
		}else{
			$templateCode = str_replace('<%%HTMLAREA(commentaires)%%>', '<div id="commentaires" class="form-control-static">' . $row['commentaires'] . '</div>', $templateCode);
		}
		$templateCode = str_replace('<%%VALUE(commentaires)%%>', nl2br($row['commentaires']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(commentaires)%%>', urlencode($urow['commentaires']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(tags)%%>', safe_html($urow['tags']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(tags)%%>', html_attr($row['tags']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tags)%%>', urlencode($urow['tags']), $templateCode);
	}else{
		$templateCode = str_replace('<%%VALUE(id_comp_indiv)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id_comp_indiv)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Competences_specifiques)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Competences_specifiques)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(competence_mis_en_oeuvre)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(competence_mis_en_oeuvre)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(niveau)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(niveau)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(consultant_id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(consultant_id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Documents_capitalises)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Documents_capitalises)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%HTMLAREA(commentaires)%%>', '<textarea name="commentaires" id="commentaires" rows="5"></textarea>', $templateCode);
		$templateCode = str_replace('<%%VALUE(tags)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tags)%%>', urlencode(''), $templateCode);
	}

	// process translations
	foreach($Translation as $symbol=>$trans) {
		$templateCode = str_replace("<%%TRANSLATION($symbol)%%>", $trans, $templateCode);
	}

	// clear scrap
	$templateCode = str_replace('<%%', '<!-- ', $templateCode);
	$templateCode = str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if($_REQUEST['dvprint_x'] == '') {
		$templateCode .= "\n\n<script>\$j(function() {\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption) {
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id) {
			$templateCode.="\n\tif(document.getElementById('Documents_capitalisesEdit')) { document.getElementById('Documents_capitalisesEdit').style.display='inline'; }";
			$templateCode.="\n\tif(document.getElementById('Documents_capitalisesEditLink')) { document.getElementById('Documents_capitalisesEditLink').style.display='none'; }";
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('competences_individuelles');
	if($selected_id) {
		$jdata = get_joined_record('competences_individuelles', $selected_id);
		if($jdata === false) $jdata = get_defaults('competences_individuelles');
		$rdata = $row;
	}
	$templateCode .= loadView('competences_individuelles-ajax-cache', array('rdata' => $rdata, 'jdata' => $jdata));

	// hook: competences_individuelles_dv
	if(function_exists('competences_individuelles_dv')) {
		$args=array();
		competences_individuelles_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}
?>