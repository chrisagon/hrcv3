<?php
// This script and data application were generated by AppGini 5.81
// Download AppGini for free from https://bigprof.com/appgini/download/

	/* Configuration */
	/*************************************/

		$pcConfig = array(
			'consultant' => array(
			),
			'missions' => array(
				'id_consultant' => array(
					'parent-table' => 'consultant',
					'parent-primary-key' => 'id_consultant',
					'child-primary-key' => 'id_mission',
					'child-primary-key-index' => 0,
					'tab-label' => 'Missions <span class="hidden child-label-missions child-field-caption">(Consultant)</span>',
					'auto-close' => false,
					'table-icon' => 'resources/table_icons/document_comment_above.png',
					'display-refresh' => true,
					'display-add-new' => true,
					'forced-where' => '',
					'display-fields' => array(1 => 'Consultant', 2 => 'Fili&#232;re', 3 => 'Site mission', 4 => 'Periode de la mission', 5 => 'Date debut', 6 => 'Date fin', 7 => 'Objet de la mission', 9 => 'Client', 10 => 'Environnement', 11 => 'Comp&#233;tences utilis&#233;es'),
					'display-field-names' => array(1 => 'id_consultant', 2 => 'rattache_a_filiere', 3 => 'site_mission', 4 => 'periode', 5 => 'date_debut', 6 => 'date_fin', 7 => 'description_mission', 9 => 'client', 10 => 'environnement', 11 => 'competences_utilisees'),
					'sortable-fields' => array(0 => '`missions`.`id_mission`', 1 => 2, 2 => '`filiere1`.`titre_filiere`', 3 => 4, 4 => 5, 5 => '`missions`.`date_debut`', 6 => '`missions`.`date_fin`', 7 => 8, 8 => 9, 9 => '`client1`.`nom_du_client`', 10 => 11, 11 => 12),
					'records-per-page' => 10,
					'default-sort-by' => 5,
					'default-sort-direction' => 'desc',
					'open-detail-view-on-click' => true,
					'display-page-selector' => true,
					'show-page-progress' => true,
					'template' => 'children-missions',
					'template-printable' => 'children-missions-printable',
					'query' => "SELECT `missions`.`id_mission` as 'id_mission', IF(    CHAR_LENGTH(`consultant1`.`Prenom`) || CHAR_LENGTH(`consultant1`.`Nom`), CONCAT_WS('',   `consultant1`.`Prenom`, ', ', `consultant1`.`Nom`), '') as 'id_consultant', IF(    CHAR_LENGTH(`filiere1`.`titre_filiere`), CONCAT_WS('',   `filiere1`.`titre_filiere`), '') as 'rattache_a_filiere', if(CHAR_LENGTH(`missions`.`site_mission`)>40, concat(left(`missions`.`site_mission`,40),' ...'), `missions`.`site_mission`) as 'site_mission', `missions`.`periode` as 'periode', if(`missions`.`date_debut`,date_format(`missions`.`date_debut`,'%d/%m/%Y'),'') as 'date_debut', if(`missions`.`date_fin`,date_format(`missions`.`date_fin`,'%d/%m/%Y'),'') as 'date_fin', `missions`.`description_mission` as 'description_mission', `missions`.`description_detaille` as 'description_detaille', IF(    CHAR_LENGTH(`client1`.`nom_du_client`), CONCAT_WS('',   `client1`.`nom_du_client`), '') as 'client', if(CHAR_LENGTH(`missions`.`environnement`)>40, concat(left(`missions`.`environnement`,40),' ...'), `missions`.`environnement`) as 'environnement', IF(    CHAR_LENGTH(`domaine1`.`titre_domaine`) || CHAR_LENGTH(`filiere2`.`titre_filiere`) || CHAR_LENGTH(`competences_ref1`.`titre_competence`), CONCAT_WS('',   `domaine1`.`titre_domaine`, '>', `filiere2`.`titre_filiere`, `competences_ref1`.`titre_competence`), '') as 'competences_utilisees' FROM `missions` LEFT JOIN `consultant` as consultant1 ON `consultant1`.`id_consultant`=`missions`.`id_consultant` LEFT JOIN `filiere` as filiere1 ON `filiere1`.`id_filiere`=`missions`.`rattache_a_filiere` LEFT JOIN `client` as client1 ON `client1`.`id_client`=`missions`.`client` LEFT JOIN `competences_ref` as competences_ref1 ON `competences_ref1`.`id_competence`=`missions`.`competences_utilisees` LEFT JOIN `domaine` as domaine1 ON `domaine1`.`id_domaine`=`competences_ref1`.`domaine_principal` LEFT JOIN `filiere` as filiere2 ON `filiere2`.`id_filiere`=`domaine1`.`rattache_a_filiere` "
				),
				'client' => array(
					'parent-table' => 'client',
					'parent-primary-key' => 'id_client',
					'child-primary-key' => 'id_mission',
					'child-primary-key-index' => 0,
					'tab-label' => 'Missions <span class="hidden child-label-missions child-field-caption">(Client)</span>',
					'auto-close' => false,
					'table-icon' => 'resources/table_icons/document_comment_above.png',
					'display-refresh' => true,
					'display-add-new' => true,
					'forced-where' => '',
					'display-fields' => array(1 => 'Consultant', 2 => 'Fili&#232;re', 3 => 'Site mission', 4 => 'Periode de la mission', 5 => 'Date debut', 6 => 'Date fin', 7 => 'Objet de la mission', 9 => 'Client', 10 => 'Environnement', 11 => 'Comp&#233;tences utilis&#233;es'),
					'display-field-names' => array(1 => 'id_consultant', 2 => 'rattache_a_filiere', 3 => 'site_mission', 4 => 'periode', 5 => 'date_debut', 6 => 'date_fin', 7 => 'description_mission', 9 => 'client', 10 => 'environnement', 11 => 'competences_utilisees'),
					'sortable-fields' => array(0 => '`missions`.`id_mission`', 1 => 2, 2 => '`filiere1`.`titre_filiere`', 3 => 4, 4 => 5, 5 => '`missions`.`date_debut`', 6 => '`missions`.`date_fin`', 7 => 8, 8 => 9, 9 => '`client1`.`nom_du_client`', 10 => 11, 11 => 12),
					'records-per-page' => 10,
					'default-sort-by' => 5,
					'default-sort-direction' => 'desc',
					'open-detail-view-on-click' => true,
					'display-page-selector' => true,
					'show-page-progress' => true,
					'template' => 'children-missions',
					'template-printable' => 'children-missions-printable',
					'query' => "SELECT `missions`.`id_mission` as 'id_mission', IF(    CHAR_LENGTH(`consultant1`.`Prenom`) || CHAR_LENGTH(`consultant1`.`Nom`), CONCAT_WS('',   `consultant1`.`Prenom`, ', ', `consultant1`.`Nom`), '') as 'id_consultant', IF(    CHAR_LENGTH(`filiere1`.`titre_filiere`), CONCAT_WS('',   `filiere1`.`titre_filiere`), '') as 'rattache_a_filiere', if(CHAR_LENGTH(`missions`.`site_mission`)>40, concat(left(`missions`.`site_mission`,40),' ...'), `missions`.`site_mission`) as 'site_mission', `missions`.`periode` as 'periode', if(`missions`.`date_debut`,date_format(`missions`.`date_debut`,'%d/%m/%Y'),'') as 'date_debut', if(`missions`.`date_fin`,date_format(`missions`.`date_fin`,'%d/%m/%Y'),'') as 'date_fin', `missions`.`description_mission` as 'description_mission', `missions`.`description_detaille` as 'description_detaille', IF(    CHAR_LENGTH(`client1`.`nom_du_client`), CONCAT_WS('',   `client1`.`nom_du_client`), '') as 'client', if(CHAR_LENGTH(`missions`.`environnement`)>40, concat(left(`missions`.`environnement`,40),' ...'), `missions`.`environnement`) as 'environnement', IF(    CHAR_LENGTH(`domaine1`.`titre_domaine`) || CHAR_LENGTH(`filiere2`.`titre_filiere`) || CHAR_LENGTH(`competences_ref1`.`titre_competence`), CONCAT_WS('',   `domaine1`.`titre_domaine`, '>', `filiere2`.`titre_filiere`, `competences_ref1`.`titre_competence`), '') as 'competences_utilisees' FROM `missions` LEFT JOIN `consultant` as consultant1 ON `consultant1`.`id_consultant`=`missions`.`id_consultant` LEFT JOIN `filiere` as filiere1 ON `filiere1`.`id_filiere`=`missions`.`rattache_a_filiere` LEFT JOIN `client` as client1 ON `client1`.`id_client`=`missions`.`client` LEFT JOIN `competences_ref` as competences_ref1 ON `competences_ref1`.`id_competence`=`missions`.`competences_utilisees` LEFT JOIN `domaine` as domaine1 ON `domaine1`.`id_domaine`=`competences_ref1`.`domaine_principal` LEFT JOIN `filiere` as filiere2 ON `filiere2`.`id_filiere`=`domaine1`.`rattache_a_filiere` "
				),
			),
			'competences_individuelles' => array(
				'rattache_a_mission' => array(
					'parent-table' => 'missions',
					'parent-primary-key' => 'id_mission',
					'child-primary-key' => 'id_comp_indiv',
					'child-primary-key-index' => 0,
					'tab-label' => 'Competences individuelles <span class="hidden child-label-competences_individuelles child-field-caption">(Rattache a la mission)</span>',
					'auto-close' => true,
					'table-icon' => 'resources/table_icons/brick.png',
					'display-refresh' => true,
					'display-add-new' => true,
					'forced-where' => '',
					'display-fields' => array(2 => 'Competence mis en oeuvre', 3 => 'Niveau de la comp&#233;tence', 4 => 'detenu par', 5 => 'Documents capitalises', 6 => 'Commentaires'),
					'display-field-names' => array(2 => 'competence_mis_en_oeuvre', 3 => 'niveau', 4 => 'consultant_id', 5 => 'Documents_capitalises', 6 => 'commentaires'),
					'sortable-fields' => array(0 => '`competences_individuelles`.`id_comp_indiv`', 1 => 2, 2 => '`competences_ref1`.`titre_competence`', 3 => 4, 4 => 5, 5 => 6, 6 => 7),
					'records-per-page' => 10,
					'default-sort-by' => false,
					'default-sort-direction' => 'asc',
					'open-detail-view-on-click' => true,
					'display-page-selector' => true,
					'show-page-progress' => true,
					'template' => 'children-competences_individuelles',
					'template-printable' => 'children-competences_individuelles-printable',
					'query' => "SELECT `competences_individuelles`.`id_comp_indiv` as 'id_comp_indiv', IF(    CHAR_LENGTH(`missions1`.`description_mission`) || CHAR_LENGTH(`client1`.`nom_du_client`), CONCAT_WS('',   `missions1`.`description_mission`, ' chez ', `client1`.`nom_du_client`), '') as 'rattache_a_mission', IF(    CHAR_LENGTH(`competences_ref1`.`titre_competence`), CONCAT_WS('',   `competences_ref1`.`titre_competence`), '') as 'competence_mis_en_oeuvre', IF(    CHAR_LENGTH(`niveaux_ref1`.`titre`) || CHAR_LENGTH(`niveaux_ref1`.`niveau`), CONCAT_WS('',   `niveaux_ref1`.`titre`, ' : ', `niveaux_ref1`.`niveau`), '') as 'niveau', IF(    CHAR_LENGTH(`consultant1`.`Prenom`) || CHAR_LENGTH(`consultant1`.`Nom`), CONCAT_WS('',   `consultant1`.`Prenom`, ', ', `consultant1`.`Nom`), '') as 'consultant_id', `competences_individuelles`.`Documents_capitalises` as 'Documents_capitalises', if(CHAR_LENGTH(`competences_individuelles`.`commentaires`)>300, concat(left(`competences_individuelles`.`commentaires`,300),' ...'), `competences_individuelles`.`commentaires`) as 'commentaires' FROM `competences_individuelles` LEFT JOIN `missions` as missions1 ON `missions1`.`id_mission`=`competences_individuelles`.`rattache_a_mission` LEFT JOIN `client` as client1 ON `client1`.`id_client`=`missions1`.`client` LEFT JOIN `competences_ref` as competences_ref1 ON `competences_ref1`.`id_competence`=`competences_individuelles`.`competence_mis_en_oeuvre` LEFT JOIN `niveaux_ref` as niveaux_ref1 ON `niveaux_ref1`.`id_niveau`=`competences_individuelles`.`niveau` LEFT JOIN `consultant` as consultant1 ON `consultant1`.`id_consultant`=`competences_individuelles`.`consultant_id` "
				),
				'consultant_id' => array(
					'parent-table' => 'consultant',
					'parent-primary-key' => 'id_consultant',
					'child-primary-key' => 'id_comp_indiv',
					'child-primary-key-index' => 0,
					'tab-label' => 'Competences individuelles <span class="hidden child-label-competences_individuelles child-field-caption">(detenu par)</span>',
					'auto-close' => false,
					'table-icon' => 'resources/table_icons/brick.png',
					'display-refresh' => true,
					'display-add-new' => true,
					'forced-where' => '',
					'display-fields' => array(2 => 'Competence mis en oeuvre', 3 => 'Niveau de la comp&#233;tence', 4 => 'detenu par', 5 => 'Documents capitalises', 6 => 'Commentaires'),
					'display-field-names' => array(2 => 'competence_mis_en_oeuvre', 3 => 'niveau', 4 => 'consultant_id', 5 => 'Documents_capitalises', 6 => 'commentaires'),
					'sortable-fields' => array(0 => '`competences_individuelles`.`id_comp_indiv`', 1 => 2, 2 => '`competences_ref1`.`titre_competence`', 3 => 4, 4 => 5, 5 => 6, 6 => 7),
					'records-per-page' => 10,
					'default-sort-by' => false,
					'default-sort-direction' => 'asc',
					'open-detail-view-on-click' => true,
					'display-page-selector' => true,
					'show-page-progress' => true,
					'template' => 'children-competences_individuelles',
					'template-printable' => 'children-competences_individuelles-printable',
					'query' => "SELECT `competences_individuelles`.`id_comp_indiv` as 'id_comp_indiv', IF(    CHAR_LENGTH(`missions1`.`description_mission`) || CHAR_LENGTH(`client1`.`nom_du_client`), CONCAT_WS('',   `missions1`.`description_mission`, ' chez ', `client1`.`nom_du_client`), '') as 'rattache_a_mission', IF(    CHAR_LENGTH(`competences_ref1`.`titre_competence`), CONCAT_WS('',   `competences_ref1`.`titre_competence`), '') as 'competence_mis_en_oeuvre', IF(    CHAR_LENGTH(`niveaux_ref1`.`titre`) || CHAR_LENGTH(`niveaux_ref1`.`niveau`), CONCAT_WS('',   `niveaux_ref1`.`titre`, ' : ', `niveaux_ref1`.`niveau`), '') as 'niveau', IF(    CHAR_LENGTH(`consultant1`.`Prenom`) || CHAR_LENGTH(`consultant1`.`Nom`), CONCAT_WS('',   `consultant1`.`Prenom`, ', ', `consultant1`.`Nom`), '') as 'consultant_id', `competences_individuelles`.`Documents_capitalises` as 'Documents_capitalises', if(CHAR_LENGTH(`competences_individuelles`.`commentaires`)>300, concat(left(`competences_individuelles`.`commentaires`,300),' ...'), `competences_individuelles`.`commentaires`) as 'commentaires' FROM `competences_individuelles` LEFT JOIN `missions` as missions1 ON `missions1`.`id_mission`=`competences_individuelles`.`rattache_a_mission` LEFT JOIN `client` as client1 ON `client1`.`id_client`=`missions1`.`client` LEFT JOIN `competences_ref` as competences_ref1 ON `competences_ref1`.`id_competence`=`competences_individuelles`.`competence_mis_en_oeuvre` LEFT JOIN `niveaux_ref` as niveaux_ref1 ON `niveaux_ref1`.`id_niveau`=`competences_individuelles`.`niveau` LEFT JOIN `consultant` as consultant1 ON `consultant1`.`id_consultant`=`competences_individuelles`.`consultant_id` "
				),
			),
			'client' => array(
			),
			'competences_ref' => array(
			),
			'domaine' => array(
				'rattache_a_filiere' => array(
					'parent-table' => 'filiere',
					'parent-primary-key' => 'id_filiere',
					'child-primary-key' => 'id_domaine',
					'child-primary-key-index' => 0,
					'tab-label' => 'Domaine <span class="hidden child-label-domaine child-field-caption">(Rattache a la Fili&#232;re)</span>',
					'auto-close' => false,
					'table-icon' => 'table.gif',
					'display-refresh' => true,
					'display-add-new' => true,
					'forced-where' => '',
					'display-fields' => array(1 => 'Titre domaine', 2 => 'Description', 3 => 'Rattache a la Fili&#232;re'),
					'display-field-names' => array(1 => 'titre_domaine', 2 => 'description', 3 => 'rattache_a_filiere'),
					'sortable-fields' => array(0 => '`domaine`.`id_domaine`', 1 => 2, 2 => 3, 3 => '`filiere1`.`titre_filiere`'),
					'records-per-page' => 10,
					'default-sort-by' => false,
					'default-sort-direction' => 'asc',
					'open-detail-view-on-click' => true,
					'display-page-selector' => true,
					'show-page-progress' => true,
					'template' => 'children-domaine',
					'template-printable' => 'children-domaine-printable',
					'query' => "SELECT `domaine`.`id_domaine` as 'id_domaine', `domaine`.`titre_domaine` as 'titre_domaine', `domaine`.`description` as 'description', IF(    CHAR_LENGTH(`filiere1`.`titre_filiere`), CONCAT_WS('',   `filiere1`.`titre_filiere`), '') as 'rattache_a_filiere' FROM `domaine` LEFT JOIN `filiere` as filiere1 ON `filiere1`.`id_filiere`=`domaine`.`rattache_a_filiere` "
				),
			),
			'filiere' => array(
			),
			'niveaux_ref' => array(
			),
			'carriere_consultant' => array(
			),
			'formation_suivi' => array(
			),
			'feedback' => array(
			),
			'emploi_fonctionnel' => array(
			),
		);

	/*************************************/
	/* End of configuration */


	$currDir = dirname(__FILE__);
	include("{$currDir}/defaultLang.php");
	include("{$currDir}/language.php");
	include("{$currDir}/lib.php");
	@header('Content-Type: text/html; charset=' . datalist_db_encoding);

	handle_maintenance();

	/**
	* dynamic configuration based on current user's permissions
	* $userPCConfig array is populated only with parent tables where the user has access to
	* at least one child table
	*/
	$userPCConfig = array();
	foreach($pcConfig as $pcChildTable => $ChildrenLookups) {
		$permChild = getTablePermissions($pcChildTable);
		if($permChild[2]) { // user can view records of the child table, so proceed to check children lookups
			foreach($ChildrenLookups as $ChildLookupField => $ChildConfig) {
				$permParent = getTablePermissions($ChildConfig['parent-table']);
				if($permParent[2]) { // user can view records of parent table
					$userPCConfig[$pcChildTable][$ChildLookupField] = $pcConfig[$pcChildTable][$ChildLookupField];
					// show add new only if configured above AND the user has insert permission
					if($permChild[1] && $pcConfig[$pcChildTable][$ChildLookupField]['display-add-new']) {
						$userPCConfig[$pcChildTable][$ChildLookupField]['display-add-new'] = true;
					}else{
						$userPCConfig[$pcChildTable][$ChildLookupField]['display-add-new'] = false;
					}
				}
			}
		}
	}

	/* Receive, UTF-convert, and validate parameters */
	$ParentTable = $_REQUEST['ParentTable']; // needed only with operation=show-children, will be validated in the processing code
	$ChildTable = $_REQUEST['ChildTable'];
		if(!in_array($ChildTable, array_keys($userPCConfig))) {
			/* defaults to first child table in config array if not provided */
			$ChildTable = current(array_keys($userPCConfig));
		}
		if(!$ChildTable) { die('<!-- No tables accessible to current user -->'); }
	$SelectedID = strip_tags($_REQUEST['SelectedID']);
	$ChildLookupField = $_REQUEST['ChildLookupField'];
		if(!in_array($ChildLookupField, array_keys($userPCConfig[$ChildTable]))) {
			/* defaults to first lookup in current child config array if not provided */
			$ChildLookupField = current(array_keys($userPCConfig[$ChildTable]));
		}
	$Page = intval($_REQUEST['Page']);
		if($Page < 1) {
			$Page = 1;
		}
	$SortBy = ($_REQUEST['SortBy'] != '' ? abs(intval($_REQUEST['SortBy'])) : false);
		if(!in_array($SortBy, array_keys($userPCConfig[$ChildTable][$ChildLookupField]['sortable-fields']), true)) {
			$SortBy = $userPCConfig[$ChildTable][$ChildLookupField]['default-sort-by'];
		}
	$SortDirection = strtolower($_REQUEST['SortDirection']);
		if(!in_array($SortDirection, array('asc', 'desc'))) {
			$SortDirection = $userPCConfig[$ChildTable][$ChildLookupField]['default-sort-direction'];
		}
	$Operation = strtolower($_REQUEST['Operation']);
		if(!in_array($Operation, array('get-records', 'show-children', 'get-records-printable', 'show-children-printable'))) {
			$Operation = 'get-records';
		}

	/* process requested operation */
	switch($Operation) {
		/************************************************/
		case 'show-children':
			/* populate HTML and JS content with children tabs */
			$tabLabels = $tabPanels = $tabLoaders = '';
			foreach($userPCConfig as $ChildTable => $childLookups) {
				foreach($childLookups as $ChildLookupField => $childConfig) {
					if($childConfig['parent-table'] == $ParentTable) {
						$TableIcon = ($childConfig['table-icon'] ? "<img src=\"{$childConfig['table-icon']}\" border=\"0\" />" : '');
						$tabLabels .= sprintf('<li%s><a href="#panel_%s-%s" id="tab_%s-%s" data-toggle="tab">%s%s</a></li>' . "\n\t\t\t\t\t",($tabLabels ? '' : ' class="active"'), $ChildTable, $ChildLookupField, $ChildTable, $ChildLookupField, $TableIcon, $childConfig['tab-label']);
						$tabPanels .= sprintf('<div id="panel_%s-%s" class="tab-pane%s"><img src="loading.gif" align="top" />%s</div>' . "\n\t\t\t\t", $ChildTable, $ChildLookupField, ($tabPanels ? '' : ' active'), $Translation['Loading ...']);
						$tabLoaders .= sprintf('post("parent-children.php", { ChildTable: "%s", ChildLookupField: "%s", SelectedID: "%s", Page: 1, SortBy: "", SortDirection: "", Operation: "get-records" }, "panel_%s-%s");' . "\n\t\t\t\t", $ChildTable, $ChildLookupField, addslashes($SelectedID), $ChildTable, $ChildLookupField);
					}
				}
			}

			if(!$tabLabels) { die('<!-- no children of current parent table are accessible to current user -->'); }
			?>
			<div id="children-tabs">
				<ul class="nav nav-tabs">
					<?php echo $tabLabels; ?>
				</ul>
				<span id="pc-loading"></span>
			</div>
			<div class="tab-content"><?php echo $tabPanels; ?></div>

			<script>
				$j(function() {
					/* for iOS, avoid loading child tabs in modals */
					var iOS = /(iPad|iPhone|iPod)/g.test(navigator.userAgent);
					var embedded = ($j('.navbar').length == 0);
					if(iOS && embedded) {
						$j('#children-tabs').next('.tab-content').remove();
						$j('#children-tabs').remove();
						return;
					}

					/* ajax loading of each tab's contents */
					<?php echo $tabLoaders; ?>

					/* show child field caption on tab title in case the same child table appears more than once */
					$j('.child-field-caption').each(function() {
						var clss = $j(this).attr('class').split(/\s+/).reduce(function(rc, cc) {
							return (cc.match(/child-label-.*/) ? '.' + cc : rc);
						}, '');

						// if class occurs more than once, remove .hidden
						if($j(clss).length > 1) $j(clss).removeClass('hidden');
					})
				})
			</script>
			<?php
			break;

		/************************************************/
		case 'show-children-printable':
			/* populate HTML and JS content with children buttons */
			$tabLabels = $tabPanels = $tabLoaders = '';
			foreach($userPCConfig as $ChildTable => $childLookups) {
				foreach($childLookups as $ChildLookupField => $childConfig) {
					if($childConfig['parent-table'] == $ParentTable) {
						$TableIcon = ($childConfig['table-icon'] ? "<img src=\"{$childConfig['table-icon']}\" border=\"0\" />" : '');
						$tabLabels .= sprintf('<button type="button" class="btn btn-default" data-target="#panel_%s-%s" id="tab_%s-%s" data-toggle="collapse">%s %s</button>' . "\n\t\t\t\t\t", $ChildTable, $ChildLookupField, $ChildTable, $ChildLookupField, $TableIcon, $childConfig['tab-label']);
						$tabPanels .= sprintf('<div id="panel_%s-%s" class="collapse"><img src="loading.gif" align="top" />%s</div>' . "\n\t\t\t\t", $ChildTable, $ChildLookupField, $Translation['Loading ...']);
						$tabLoaders .= sprintf('post("parent-children.php", { ChildTable: "%s", ChildLookupField: "%s", SelectedID: "%s", Page: 1, SortBy: "", SortDirection: "", Operation: "get-records-printable" }, "panel_%s-%s");' . "\n\t\t\t\t", $ChildTable, $ChildLookupField, addslashes($SelectedID), $ChildTable, $ChildLookupField);
					}
				}
			}

			if(!$tabLabels) { die('<!-- no children of current parent table are accessible to current user -->'); }
			?>
			<div id="children-tabs" class="hidden-print">
				<div class="btn-group btn-group-lg">
					<?php echo $tabLabels; ?>
				</div>
				<span id="pc-loading"></span>
			</div>
			<div class="vspacer-lg"><?php echo $tabPanels; ?></div>

			<script>
				$j(function() {
					/* for iOS, avoid loading child tabs in modals */
					var iOS = /(iPad|iPhone|iPod)/g.test(navigator.userAgent);
					var embedded = ($j('.navbar').length == 0);
					if(iOS && embedded) {
						$j('#children-tabs').next('.tab-content').remove();
						$j('#children-tabs').remove();
						return;
					}

					/* ajax loading of each tab's contents */
					<?php echo $tabLoaders; ?>
				})
			</script>
			<?php
			break;

		/************************************************/
		case 'get-records-printable':
		default: /* default is 'get-records' */

			if($Operation == 'get-records-printable') {
				$userPCConfig[$ChildTable][$ChildLookupField]['records-per-page'] = 2000;
			}

			// build the user permissions limiter
			$permissionsWhere = $permissionsJoin = '';
			$permChild = getTablePermissions($ChildTable);
			if($permChild[2] == 1) { // user can view only his own records
				$permissionsWhere = "`$ChildTable`.`{$userPCConfig[$ChildTable][$ChildLookupField]['child-primary-key']}`=`membership_userrecords`.`pkValue` AND `membership_userrecords`.`tableName`='$ChildTable' AND LCASE(`membership_userrecords`.`memberID`)='".getLoggedMemberID()."'";
			}elseif($permChild[2] == 2) { // user can view only his group's records
				$permissionsWhere = "`$ChildTable`.`{$userPCConfig[$ChildTable][$ChildLookupField]['child-primary-key']}`=`membership_userrecords`.`pkValue` AND `membership_userrecords`.`tableName`='$ChildTable' AND `membership_userrecords`.`groupID`='".getLoggedGroupID()."'";
			}elseif($permChild[2] == 3) { // user can view all records
				/* that's the only case remaining ... no need to modify the query in this case */
			}
			$permissionsJoin = ($permissionsWhere ? ", `membership_userrecords`" : '');

			// build the count query
			$forcedWhere = $userPCConfig[$ChildTable][$ChildLookupField]['forced-where'];
			$query = 
				preg_replace('/^select .* from /i', 'SELECT count(1) FROM ', $userPCConfig[$ChildTable][$ChildLookupField]['query']) .
				$permissionsJoin . " WHERE " .
				($permissionsWhere ? "( $permissionsWhere )" : "( 1=1 )") . " AND " .
				($forcedWhere ? "( $forcedWhere )" : "( 2=2 )") . " AND " .
				"`$ChildTable`.`$ChildLookupField`='" . makeSafe($SelectedID) . "'";
			$totalMatches = sqlValue($query);

			// make sure $Page is <= max pages
			$maxPage = ceil($totalMatches / $userPCConfig[$ChildTable][$ChildLookupField]['records-per-page']);
			if($Page > $maxPage) { $Page = $maxPage; }

			// initiate output data array
			$data = array(
				'config' => $userPCConfig[$ChildTable][$ChildLookupField],
				'parameters' => array(
					'ChildTable' => $ChildTable,
					'ChildLookupField' => $ChildLookupField,
					'SelectedID' => $SelectedID,
					'Page' => $Page,
					'SortBy' => $SortBy,
					'SortDirection' => $SortDirection,
					'Operation' => $Operation
				),
				'records' => array(),
				'totalMatches' => $totalMatches
			);

			// build the data query
			if($totalMatches) { // if we have at least one record, proceed with fetching data
				$startRecord = $userPCConfig[$ChildTable][$ChildLookupField]['records-per-page'] * ($Page - 1);
				$data['query'] = 
					$userPCConfig[$ChildTable][$ChildLookupField]['query'] .
					$permissionsJoin . " WHERE " .
					($permissionsWhere ? "( $permissionsWhere )" : "( 1=1 )") . " AND " .
					($forcedWhere ? "( $forcedWhere )" : "( 2=2 )") . " AND " .
					"`$ChildTable`.`$ChildLookupField`='" . makeSafe($SelectedID) . "'" . 
					($SortBy !== false && $userPCConfig[$ChildTable][$ChildLookupField]['sortable-fields'][$SortBy] ? " ORDER BY {$userPCConfig[$ChildTable][$ChildLookupField]['sortable-fields'][$SortBy]} $SortDirection" : '') .
					" LIMIT $startRecord, {$userPCConfig[$ChildTable][$ChildLookupField]['records-per-page']}";
				$res = sql($data['query'], $eo);
				while($row = db_fetch_row($res)) {
					$data['records'][$row[$userPCConfig[$ChildTable][$ChildLookupField]['child-primary-key-index']]] = $row;
				}
			}else{ // if no matching records
				$startRecord = 0;
			}

			if($Operation == 'get-records-printable') {
				$response = loadView($userPCConfig[$ChildTable][$ChildLookupField]['template-printable'], $data);
			}else{
				$response = loadView($userPCConfig[$ChildTable][$ChildLookupField]['template'], $data);
			}

			// change name space to ensure uniqueness
			$uniqueNameSpace = $ChildTable.ucfirst($ChildLookupField).'GetRecords';
			echo str_replace("{$ChildTable}GetChildrenRecordsList", $uniqueNameSpace, $response);
		/************************************************/
	}
